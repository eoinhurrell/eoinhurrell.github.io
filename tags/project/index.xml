<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Project on </title>
    <link>https://www.eoinhurrell.com/tags/project/</link>
    <description>Recent content in Project on </description>
    <generator>Hugo -- 0.147.3</generator>
    <language>en</language>
    <lastBuildDate>Mon, 19 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.eoinhurrell.com/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Inboxer: A Plugin for Obsidian</title>
      <link>https://www.eoinhurrell.com/posts/20250519-inboxer-an-obsidian-plugin/</link>
      <pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate>
      <guid>https://www.eoinhurrell.com/posts/20250519-inboxer-an-obsidian-plugin/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m excited to announce that &lt;a href=&#34;https://github.com/eoinhurrell/obsidian-inboxer&#34;&gt;Inboxer&lt;/a&gt;, a small Obsidian plugin I created for my own workflow, is now available in Obsidian through Community Plugins.&lt;/p&gt;
&lt;p&gt;As an ML engineer, I spend a lot of time in Obsidian managing research notes, and I kept running into an annoying workflow issue.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;d found there was a lot of friction when trying to add details to a note, say a project or an idea, in a structured way. I&amp;rsquo;m in the habit of keeping an &amp;lsquo;INBOX&amp;rsquo; heading where I can append random thoughts, links, websites etc, and for projects a &amp;lsquo;TIMELINE&amp;rsquo; heading to record events and progress. It became annoying switching to a note, finding the heading and adding a subheading whenever I had new information. Context switching kills my flow, and those small interruptions add up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Multi-Agent Code Review System Using the Viable System Model</title>
      <link>https://www.eoinhurrell.com/posts/20250306-viable-systems-ai/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://www.eoinhurrell.com/posts/20250306-viable-systems-ai/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been investigating multi-agent systems and their applications in development workflows. After reading Anthropic&amp;rsquo;s recent &lt;a href=&#34;https://www.anthropic.com/research/building-effective-agents&#34;&gt;guide to agent coordination patterns&lt;/a&gt;, I wanted to experiment beyond established patterns like Evaluator-optimizer and Orchestrator-worker workflows.&lt;/p&gt;
&lt;p&gt;For this exploration, I&amp;rsquo;ve chosen automated code review as a sufficiently complex problem domain. I&amp;rsquo;m building a multi-agent system structured according to the Viable System Model (VSM) â€“ a cybernetics framework that provides an elegant organizational structure for complex systems. This post explores how VSM can serve as a foundation for implementing a multi-agent code review system that&amp;rsquo;s both effective and adaptive.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RetentionCast: Building Real-Time Churn Prediction with Change Data Capture</title>
      <link>https://www.eoinhurrell.com/posts/20250221-retentioncast/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.eoinhurrell.com/posts/20250221-retentioncast/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;This is a quick write-up of RetentionCast, a system I built to predict customer churn in real-time using Change Data Capture. The system processes live transaction data through Kafka and Debezium to calculate churn probability and Customer Lifetime Value. Check out the &lt;a href=&#34;https://github.com/eoinhurrell/RetentionCast&#34;&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-churn-problem&#34;&gt;The Churn Problem&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;ve worked in e-commerce or SaaS, you know customer churn is the silent killer of growth. Traditional approaches to churn prediction often involve batch processing - running models overnight on yesterday&amp;rsquo;s data. But by the time you&amp;rsquo;ve identified that a customer is at risk, they might already be gone.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
